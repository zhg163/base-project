---
description: 
globs: 
alwaysApply: true
---

# 分析问题时考虑对原有代码影响的思维框架

要在每次分析问题时全面考虑对原有代码的影响，我会采用以下系统化思维框架：

## 1. 全局影响分析
- 所有依赖于修改组件的服务和功能
- 上下游数据流和API调用链
- 现有测试和持续集成流程

## 2. 代码修改后果评估
- 变更的范围（尽量控制在最小必要范围）
- API契约变更对客户端的影响
- 运行时性能和资源消耗影响

## 3. 兼容性维护策略
- 向后兼容性解决方案（如路由重定向、兼容层）
- 渐进式部署策略（如特性标志、A/B测试）
- 文档和注释更新需求

## 4. 风险分级与缓解
- 高、中、低风险变更的识别
- 针对每类风险的验证和回滚策略
- 部署前的检查清单

